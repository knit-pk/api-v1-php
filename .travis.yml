language: php
sudo: false
dist: trusty

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/pecl_cache

env:
  global:
    - APP_ENV=test
    - APP_DEBUG=1
    - COMPOSER_METHOD=install
    - SWOOLE_VERSION=4.0.1
    - JWT_PRIVATE_KEY_PATH=config/jwt/private.pem
    - JWT_PUBLIC_KEY_PATH=config/jwt/public.pem
    - JWT_PASSPHRASE=56c247d4c281f5de0d8d9d894f2b605157fd379c
matrix:
  include:
    - php: '7.2'
      services:
        - mysql
        - docker
      addons:
        ssh_known_hosts: s11.mydevil.net
        apt:
          sources:
            - mysql-5.7-trusty
          packages:
            - mysql-server
      before_script:
        - >-
          curl -L
          https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
        - mysql -e 'CREATE DATABASE knit_api_test;'
      after_success:
        - >-
          ./cc-test-reporter after-build -t clover --exit-code
          $TRAVIS_TEST_RESULT
      env:
        - DEPLOY=1
        - >-
          DATABASE_URL="mysql://travis@127.0.0.1:3306/knit_api_test?charset=utf8mb4&serverVersion=5.7"
    - php: '7.2'
      services:
        - postgresql
      before_script:
        - psql -c 'CREATE DATABASE knit_api_test;' -U postgres
      env:
        - 'DATABASE_URL="pgsql://postgres@127.0.0.1:5432/knit_api_test"'
    - php: '7.2'
      env:
        - COMPOSER_METHOD=update

before_install:
  - 'export PATH="$PATH:$HOME/.composer/vendor/bin"'
  - 'composer global require phwoolcon/ci-pecl-cacher'
  - pecl update-channels
  - ci-pecl-install swoole-$SWOOLE_VERSION swoole

install:
  - >-
    composer $COMPOSER_METHOD --prefer-dist --no-progress --no-suggest
    --no-scripts --ansi

script:
  - composer analyze
  - 'if [[ "$DEPLOY" != "1" ]]; then composer phpunit; fi'
  - 'if [[ -v DATABASE_URL ]]; then bin/console doctrine:schema:create; fi'
  - 'if [[ -v DATABASE_URL ]]; then bin/console doctrine:fixtures:load -n; fi'
  - 'if [[ -v DATABASE_URL ]]; then make generate-jwt-keys; fi'
  - 'if [[ -v DATABASE_URL ]]; then if [[ "$DEPLOY" != "1"  ]]; then composer behat; else composer code-coverage; fi; fi'

before_deploy:
  - >-
    export APP_VERSION=$(cat ./composer.json | grep version | sed -E
    "s/\s+\"version\": \"(.*)\",/v\1/") && echo $APP_VERSION
  - >-
    openssl aes-256-cbc -K $encrypted_abb59573aead_key -iv
    $encrypted_abb59573aead_iv -in ./deploy/mydevil.tar.enc -out
    /tmp/mydevil.tar -d
  - tar xvf /tmp/mydevil.tar -C /tmp
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/mydevil_rsa
  - ssh-add /tmp/mydevil_rsa
  - yarn global add conventional-changelog-cli conventional-github-releaser

deploy:
  - provider: script
    skip_cleanup: true
    script: >-
      bash ./deploy/mydevil-deploy.sh && ssh k911-main@s11.mydevil.net "export
      APP_VERSION=$APP_VERSION && bash -s" < ./deploy/mydevil-post-deploy.sh
    on:
      branch: develop
      condition: $DEPLOY = 1
  - provider: script
    skip_cleanup: true
    script: bash ./deploy/github-tag.sh
    on:
      branch: master
      condition: $DEPLOY = 1
  - provider: script
    skip_cleanup: true
    script: bash ./deploy/docker-app-push.sh
    on:
      tags: true
      condition: $DEPLOY = 1
